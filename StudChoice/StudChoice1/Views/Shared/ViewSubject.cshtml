@model StudChoice.BLL.DTOs.SubjectDTO

@{
    ViewData["Title"] = $"{Model.Name}";
}

<div class="bg-primary text-white text-center"><h4>@Model.Name</h4></div>

<div class="container d-flex flex-row justify-content-around">
    <div class="container d-flex flex-row">
        <div class="">
            <p>Факультет: @Model.FacultyName</p>
            <p>Кафедра: @Model.CathedraName</p>
            <p>Студентів: @Model.AssignedStudentsCount / @Model.MaxStudents</p>
            <p>Викладач: @Model.ProfessorFullName</p>
            <p>Опис: @Model.Description</p>
            <a asp-action="Choose" asp-all-route-data="@(new Dictionary<string, string> { {"subjectId", Model.Id.ToString() }, { "term", "1"} })">Вибрати цей предмет предмет (1 семестр)</a>
            <a asp-action="Choose" asp-all-route-data="@(new Dictionary<string, string> { {"subjectId", Model.Id.ToString() }, { "term", "2"} })">Вибрати цей предмет предмет (2 семестр)</a>

        </div>
    </div>
</div>

<div class="container">
    <div class="row">&nbsp;</div>
    <h3>Залишіть коментар</h3>
    <div style="margin-bottom: 20px;" class="row">
        <div class="col-2">Користувач</div>
        <div class="col-4"><input type="text" id="userInput" /></div>
    </div>
    <div class="row">
        <div class="col-2">Повідомлення</div>
        <div class="col-4"><textarea rows="10" cols="60" type="text" id="messageInput"></textarea></div>
    </div>
    <div class="row">&nbsp;</div>
    <div class="row">
        <div class="col-6">
            <input type="button" id="sendButton" value="Коментувати" />
        </div>
    </div>
</div>
<div class="row">
    <div class="col-12">
        <hr />
    </div>
</div>
<h3>Коментарі</h3>
<div class="row" style="margin-bottom: 30px;">
    
    <div>
        <ul id="messagesList"></ul>
    </div>
</div>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script>
    //var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

    ////Disable send button until connection is established
    //document.getElementById("sendButton").disabled = true;

    //connection.on("ReceiveMessage", (user, message) => {
    //    console.log('ffffffffffff');
    //    var msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
    //    var encodedMsg = user + " : " + msg;
    //    var li = document.createElement("li");
    //    li.textContent = encodedMsg;
    //    document.getElementById("messagesList").appendChild(li);
    //});

    //connection.start().then(() => {
    //    console.log('ssssssssssss');
    //    document.getElementById("sendButton").disabled = false;
    //}).catch((err) => {
    //    return console.error(err.toString());
    //});

    //document.getElementById("sendButton").addEventListener("click", (event) => {
    //    var user = document.getElementById("userInput").value;
    //    var message = document.getElementById("messageInput").value;
    //    connection.invoke("SendMessage", user, message).catch((err) => {
    //        return console.error(err.toString());
    //    });
    //    event.preventDefault();
    //});

    var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

    //Disable send button until connection is established
    document.getElementById("sendButton").disabled = true;

    connection.on("ReceiveMessage", function (user, message) {
        var msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
        var encodedMsg = user + " : " + msg;
        var li = document.createElement("li");
        li.textContent = encodedMsg;
        document.getElementById("messagesList").appendChild(li);
    });

    connection.start().then(function () {
        document.getElementById("sendButton").disabled = false;
    }).catch(function (err) {
        return console.error(err.toString());
    });

    document.getElementById("sendButton").addEventListener("click", function (event) {
        var user = document.getElementById("userInput").value;
        var message = document.getElementById("messageInput").value;
        connection.invoke("SendMessage", user, message).catch(function (err) {
            return console.error(err.toString());
        });
        event.preventDefault();
    });
</script>

